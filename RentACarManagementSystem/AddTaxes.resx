<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAANzSURBVFhH7ZfLb0xRHMcHIdG0EW8LJR7xmJk2oujc10wQ
        C9V2ZmglgrDwJkJiQzRFJRZaqei9d/qwFNRKImFB/ANSvY/SWHgGYYFE7CT1/d3+NGbuvdO5UxaSfpKT
        Ob/vef3uOed3zpnQOP8dYsZaIurGXlG3Lkma2UVpOG/vkTVzMVf7u4R77Sno/AAGMiTdfI/fG6JmnSHN
        0ZEnjcok3XgKex+14eZjQ1bNhKiaL0TNvC9o9obQ0NAELnKDMqoDRx5IujUoaobCJcWBTk4JqvFB1qxa
        lgpGylh11FbSrBMsBQNr24QOBtZ1GfNZCgy1pT4wI6dZKgw02C5o1stEhz2PJQ+aJ0aV9JZoPFlDeRZd
        UB+Sar3CvtjGUn6qu825gm59VjLGapY8icRTF8KJlFyh1MfhRAvLnogZcw2W85N8tW82S/6IqpXB5rnM
        pi8RJXmes44znPUFe6FN1M0ONr1Ze+3ZTHz9l0Tn4CyWfIED5ziblfeDvp76RthOZ8kN1v4gxTObeQnq
        ACFpxi1Rt/ez6QY7/w6maSebeSnGAYTzbkG1brPphg4codNcwaZDVVVtSVhJH6VBchNXcRxwpXjySCzW
        MJWrOMi6HaYDik03CJcfVZ1PSth0QGdtSOVsFkxYql0QkVOtbDogJEsF3fjOphtMz89Q81BWTGPwkd0e
        lNzoaOztneSM4Qdm4BtmYBqbDvQVK9dvXchmwVQqdYui8VRWOFMEIBK+sukGx2Z/7gFE6xhJpA6PrO0f
        iat47oGokjqUuweGDySzj003gmb0oMIxNvNCg3A2K58PQTOPI8w72XSDwdNIj9jMS1EOqMZjPGaSbLqh
        RwQqfKRwYcmXoA4IWn+UrmfssckseUNvAMzCXTZ9CeoA+r2HU/Akm/7QLNAdjkNpF0ueROVkezjRWLpc
        rC+jPMue0HsRDlijfv1vYhmjgq5kxKzIkotKIT0nqiSbIkrq7Cq5wfealXVLcq7iApY1CyzDJmqIC2Qz
        S4HBvVLjDJ4xNrIUDJoB3OPvcEldEXuel7E8KlQXj9h2HLtv5cxANcvFQW8ExO51+hJ8UUu1aq3kIhdU
        Bmcv0vJhBrtj3fYMLho7clf/MpoJbNA3FE544z3EIDcpUZ7CF/8JXsPZ1liHvZSb/RsU1SqnPYKNtYMS
        5Unj4nECEAr9Aga5rGU/VTHYAAAAAElFTkSuQmCC
</value>
  </data>
</root>